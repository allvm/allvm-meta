#
# Horizon bytecode compiler
# Copyright (C) 2010 James Molloy
#
# Horizon is open source software, released under the terms of the Non-Profit
# Open Software License 3.0. You should have received a copy of the
# licensing information along with the source code distribution. If you
# have not received a copy of the license, please refer to the Horizon
# project website.
#
# Please note that if you modify this file, the license requires you to
# ADD your name to the list of contributors. This boilerplate is not the
# license itself; please refer to the copy of the license you have received
# for complete terms.
#

#
# gen-syscall-list.pl: Greps /usr/include/asm/unistd_64.h for 64-bit syscall
#                      numbers and creates a C++ mapping.
#

use strict;
use warnings;

my @FILES = ("/usr/include/asm/unistd_64.h", "/usr/include/asm-x86_64/unistd.h");

my $fname = "";
foreach my $x (@FILES) {
    if(-f $x) {
        $fname = $x;
        last;
    }
}
unless(length $fname) {
    die("None of the files " . join " or ", @FILES . " were available for reading.\n");
}
open my $fd, "<", $fname;

die("No output file specified.") unless defined $ARGV[0];
open my $outfd, ">", $ARGV[0] or die("Output file $ARGV[0] not available for writing.");

my @arr;
my $next = 0;
while(<$fd>) {
  if(m/^#define __NR_([A-Za-z0-9_]+)[ \t]*(\d+)/) {

    push @arr, "\"$1\"";

    die("Hole found in syscall numbers (shouldn't happen) at $next.") unless $2 == $next;
    $next ++;
  }
}

print $outfd "/* Horizon bytecode compiler\n";
print $outfd " * Copyright (C) 2010 James Molloy\n";
print $outfd " *\n";
print $outfd " * Horizon is open source software, released under the terms of the Non-Profit\n";
print $outfd " * Open Software License 3.0. You should have received a copy of the\n";
print $outfd " * licensing information along with the source code distribution. If you\n";
print $outfd " * have not received a copy of the license, please refer to the Horizon\n";
print $outfd " * project website.\n";
print $outfd " *\n";
print $outfd " * Please note that if you modify this file, the license requires you to\n";
print $outfd " * ADD your name to the list of contributors. This boilerplate is not the\n";
print $outfd " * license itself; please refer to the copy of the license you have received\n";
print $outfd " * for complete terms.\n";
print $outfd " */\n";
print $outfd "\n";

print $outfd "/* AUTOGENERATED BY gen-syscall-list.pl. DO NOT EDIT! */\n";
print $outfd "\n";

print $outfd "#ifndef GEN_SYSCALL_LIST\n";
print $outfd "#define GEN_SYSCALL_LIST\n";
print $outfd "\n";

print $outfd "const unsigned long NumLinuxSyscalls = $next;\n";
print $outfd "\n";

print $outfd "#ifndef LINUX_SYSCALLS_DEFINED\n";
print $outfd "const char *LinuxSyscalls[$next] = {\n\t";

print $outfd join ",\n\t", @arr;

print $outfd "\n};\n";
print $outfd "#endif\n";
print $outfd "\n";

print $outfd "/* Prefix all by HZN_SC_ in an attempt to fight namespace clashes. */\n";
my $idx = 0;
for my $i (@arr) {
    $i =~ s/"//g;
    my $str = "#define HZN_SC_" . $i;
    $str = sprintf("%-48s", $str);
    print $outfd $str . $idx . "\n";
    $idx ++;
}
print $outfd "\n";

print $outfd "#endif\n";
